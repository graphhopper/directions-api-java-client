/*
 * GraphHopper Directions API
 * You use the GraphHopper Directions API to add route planning, navigation and route optimization to your software. E.g. the Routing API has turn instructions and elevation data and the Route Optimization API solves your logistic problems and supports various constraints like time window and capacity restrictions. Also it is possible to get all distances between all locations with our fast Matrix API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.graphhopper.directions.api.client.api;

import com.graphhopper.directions.api.client.ApiException;
import com.graphhopper.directions.api.client.model.GHError;
import com.graphhopper.directions.api.client.model.GeocodingResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GeocodingApi
 */
@Ignore
public class GeocodingApiTest {

    private final GeocodingApi api = new GeocodingApi();

    
    /**
     * Execute a Geocoding request
     *
     * This endpoint provides forward and reverse geocoding. For more details, review the official documentation at: https://graphhopper.com/api/1/docs/geocoding/ 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void geocodeGetTest() throws ApiException {
        String key = null;
        String q = null;
        String locale = null;
        Integer limit = null;
        Boolean reverse = null;
        String point = null;
        String provider = null;
        GeocodingResponse response = api.geocodeGet(key, q, locale, limit, reverse, point, provider);

        // TODO: test validations
    }
    
}
